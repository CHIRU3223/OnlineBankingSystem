@model IEnumerable<OnlineBankingSystem.Models.Transaction>
@{
    ViewData["Title"] = "Dashboard";
    var balance = ViewData["AccountBalance"];
    var transactions = ViewData["transactions"];
    var freezed = ViewData["AccFreezed"];
    var hasCheckbook = ViewData["AccCheckbook"] ;
    var accNo = ViewData["AccNo"] as string;
}

<h1>Dashboard</h1>
<br />
<br />


<div>
    <h3>Account Balance = @balance</h3>
</div>

@if(hasCheckbook.Equals(false))
{
    <a asp-controller="Requests" asp-action="NewRequest" asp-route-id="@accNo" asp-route-value="checkbook" class="btn btn-secondary">Request for Checkbook</a>
}

@if (freezed.Equals(false))
{
    <a asp-controller="Requests" asp-action="NewRequest" asp-route-id="@accNo" asp-route-value="freeze" class="btn btn-danger">Freeze Account</a>
}
else
{
    <a asp-controller="Requests" asp-action="NewRequest" asp-route-id="@accNo" asp-route-value="freeze" class="btn btn-success">UnFreeze Account</a>
}

<br />
<br />

<h4>Recent 10 Transactions</h4>
<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.ToAccountNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionAmount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>


                <td>
                    @Html.DisplayFor(modelItem => item.ToAccountNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionAmount)
                </td>

            </tr>
        }
    </tbody>
</table>


<a asp-controller="Transactions" asp-action="Create" class="btn btn-primary">Make a Transaction</a>
<a asp-controller="Transactions" asp-action="Search" class="btn btn-secondary">Search Transaction</a>
